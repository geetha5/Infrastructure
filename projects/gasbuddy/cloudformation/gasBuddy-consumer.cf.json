{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Gas Buddy Consumer Stack",
  "Parameters": {
    "environment": {
      "Type": "String",
      "Description": "The stack environment"
    },
    "kinesisStackName": {
      "Type": "String",
      "Description": "The stack name of the kinesis stack for gas buddy"
    },
    "vpcStackName": {
      "Type": "String",
      "Description": "The stack name of the vpc stack"
    },
    "kmsStackName": {
      "Type": "String",
      "Description": "The stack name of the kms key for gasbuddy for references"
    },
    "consumerMemory": {
      "Type": "Number",
      "Description": "The lambda memory given to the consumer lambda function",
      "Default": "128"
    },
    "consumerTimeout": {
      "Type": "Number",
      "Description": "The timeout for the consumer lambda function",
      "Default": "300"
    },
    "artifactsBucket": {
      "Type": "String",
      "Description": "The S3 bucket where code is stored"
    },
    "consumerS3Key": {
      "Type": "String",
      "Description": "The S3 Key of the consumer jar or zip"
    },
    "consumerBatchSize": {
      "Type": "Number",
      "Description": "The batch size for the lambda consumer event"
    }
  },
  "Mappings": {
    "SharedEnvMap": {
      "dit": { "baseEnv": "dev" },
      "dev": { "baseEnv": "dev" },
      "stage": { "baseEnv": "stage" },
      "stage-transys": { "baseEnv": "stage" },
      "prod": { "baseEnv": "prod" }
    }
  },
  "Resources": {
    "AuthKinesisDlqSqs": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "FifoQueue": true,
        "MessageRetentionPeriod": "1209600",
        "KmsMasterKeyId": { "Fn::ImportValue": { "Fn::Sub": "${kmsStackName}-GasBuddyConsumerDlqKmsKey-Arn" } }
      }
    },
    "GasbuddyOutputDlqSqs": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "FifoQueue": true,
        "MessageRetentionPeriod": "1209600",
        "KmsMasterKeyId": { "Fn::ImportValue": { "Fn::Sub": "${kmsStackName}-GasBuddyConsumerDlqKmsKey-Arn" } }
      }
    },
    "LambdaConsumerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [ "lambda.amazonaws.com" ]
            },
            "Action": "sts:AssumeRole"
          }]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "CloudwatchLogs-RW",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          },
          {
            "PolicyName": "ListAllStreams",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "kinesis:ListStream",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "AuthStream-Get",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "kms:Decrypt",
                  "Resource": { "Fn::ImportValue": { "Fn::Sub": "${kmsStackName}-AuthStreamKmsKey-Arn" } }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "kinesis:Get*",
                    "kinesis:Describe*"
                  ],
                  "Resource": { "Fn::ImportValue": { "Fn::Sub": "${kinesisStackName}-AuthStream-Arn" } }
                }
              ]
            }
          },
          {
            "PolicyName": "GasBuddyStream-Put",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "kms:GenerateDataKey",
                  "Resource": { "Fn::ImportValue": { "Fn::Sub": "${kmsStackName}-GasBuddyStreamKmsKey-Arn" } }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "kinesis:Describe*",
                    "kinesis:PutRecords"
                  ],
                  "Resource": { "Fn::ImportValue": { "Fn::Sub": "${kinesisStackName}-GBOutputStream-Arn" } }
                }
              ]
            }
          },
          {
            "PolicyName": "CloudWatch",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "autoscaling:Describe*",
                    "cloudwatch:Describe*",
                    "cloudwatch:List*",
                    "cloudwatch:PutMetricAlarm*",
                    "cloudwatch:PutMetricData",
                    "cloudwatch:DeleteAlarms",
                    "cloudwatch:Get*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "ParameterStoreAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "ssm:DescribeParameters",
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": "ssm:GetParameters",
                  "Resource": { "Fn::Join": [ "", [ "arn:aws:ssm:", { "Ref": "AWS::Region" }, ":",
                    { "Ref": "AWS::AccountId" }, ":parameter/",
                    { "Fn::FindInMap": [ "SharedEnvMap", { "Ref": "environment" }, "baseEnv" ] }, ".auth-proxy.aesKey*" ] ] }
                },
                {
                  "Effect": "Allow",
                  "Action": "kms:Decrypt",
                  "Resource": { "Fn::ImportValue": { "Fn::Sub": "${vpcStackName}-ParameterStoreKmsKey-Arn" } }
                }
              ]
            }
          },
          {
            "PolicyName": "DlqAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "sqs:ListQueues",
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:Get*",
                    "sqs:DeleteMessage*",
                    "sqs:SendMessage",
                    "sqs:Change*"
                  ],
                  "Resource": [
                    { "Fn::GetAtt": [ "AuthKinesisDlqSqs", "Arn" ] },
                    { "Fn::GetAtt": [ "GasbuddyOutputDlqSqs", "Arn" ] }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "kms:GenerateDataKey",
                    "kms:Decrypt"
                  ],
                  "Resource": { "Fn::ImportValue": { "Fn::Sub": "${kmsStackName}-GasBuddyConsumerDlqKmsKey-Arn" } }
                }
              ]
            }
          }
        ]
      }
    },
    "ConsumerFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "artifactsBucket" },
          "S3Key": { "Ref": "consumerS3Key" }
        },
        "Handler": "com.wex.mobile.gasbuddyauthfilter.lambda.requesthandler.AuthorizationsRequestHandler",
        "MemorySize": { "Ref": "consumerMemory" },
        "Runtime": "java8",
        "Timeout": { "Ref": "consumerTimeout" },
        "Role": { "Fn::GetAtt": [ "LambdaConsumerRole", "Arn" ] },
        "Environment": {
          "Variables": {
            "KINESIS_GASBUDDY_OUTBOUND": { "Fn::ImportValue": { "Fn::Sub": "${kinesisStackName}-GBOutputStream-Name" } },
            "SQS_AUTH_KINESIS_RECORD_DLQ_URL": { "Ref": "AuthKinesisDlqSqs" },
            "SQS_GASBUDDY_AUTH_DLQ_URL": { "Ref": "GasbuddyOutputDlqSqs" }
          }
        }
      }
    },
    "AuthConsumerTriggerEvent": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": { "Ref": "consumerBatchSize" },
        "Enabled": true,
        "EventSourceArn": { "Fn::ImportValue": { "Fn::Sub": "${kinesisStackName}-AuthStream-Arn" } },
        "FunctionName": { "Ref": "ConsumerFunction" },
        "StartingPosition": "TRIM_HORIZON"
      }
    }
  }
}